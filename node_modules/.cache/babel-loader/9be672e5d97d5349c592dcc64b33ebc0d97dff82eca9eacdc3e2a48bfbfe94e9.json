{"ast":null,"code":"var _jsxFileName = \"/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/ProjectGallery.js\";\n// Must be a reusable component that ingests JSON data as props and renders a single instance for each project\n//Must utilize Router props to properly render the right project based on user selection\n//Must render the following info:\n// Project title\n// Link to the deployed version\n// Link to the GitHub repository\n// GIF or screenshot of the deployed application\n// this is an actual card content\nimport React from \"react\";\n// import ContentCard from \"../components/ContentCard\";\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\n\n// import \"../pages/ProjectGallery.css\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n// i will create one instance of a card and populate it with appropriate content from my project JSON\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectGallery() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        className: \"g-4\",\n        children: projectData.map(project => /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            children: project.projectUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: project.repoUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"projectsCards\",\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              className: \"projectsImgEl\",\n              variant: \"top\",\n              src: process.env.PUBLIC_URL + \"/\" + project.projectImage,\n              alt: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectGallery;\nexport default ProjectGallery;\nvar _c;\n$RefreshReg$(_c, \"ProjectGallery\");","map":{"version":3,"names":["React","Layout","projectData","Card","Col","Row","jsxDEV","_jsxDEV","ProjectGallery","children","xs","md","className","map","project","title","fileName","_jsxFileName","lineNumber","columnNumber","description","Link","projectUrl","repoUrl","Img","variant","src","process","env","PUBLIC_URL","projectImage","alt","id","_c","$RefreshReg$"],"sources":["/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/ProjectGallery.js"],"sourcesContent":["// Must be a reusable component that ingests JSON data as props and renders a single instance for each project\n//Must utilize Router props to properly render the right project based on user selection\n//Must render the following info:\n// Project title\n// Link to the deployed version\n// Link to the GitHub repository\n// GIF or screenshot of the deployed application\n// this is an actual card content\nimport React from \"react\";\n// import ContentCard from \"../components/ContentCard\";\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\n\n// import \"../pages/ProjectGallery.css\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n// i will create one instance of a card and populate it with appropriate content from my project JSON\nfunction ProjectGallery() {\n  return (\n    <div>\n      <Layout>\n        <Row xs={1} md={2} className=\"g-4\">\n          {projectData.map((project) => (\n            <Col key={project.id}>\n              <div>{project.title}</div>\n              <div>{project.description}</div>\n              <Link>{project.projectUrl}</Link>\n              <div>{project.repoUrl}</div>\n\n              <Card className=\"projectsCards\">\n                <Card.Img\n                  className=\"projectsImgEl\"\n                  variant=\"top\"\n                  src={process.env.PUBLIC_URL + \"/\" + project.projectImage}\n                  alt={project.title}\n                />\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Layout>\n    </div>\n  );\n}\n\nexport default ProjectGallery;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,iBAAiB;;AAEzC;;AAEA,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,cAAcA,CAAA,EAAG;EACxB,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACN,MAAM;MAAAQ,QAAA,eACLF,OAAA,CAACF,GAAG;QAACK,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,SAAS,EAAC,KAAK;QAAAH,QAAA,EAC/BP,WAAW,CAACW,GAAG,CAAEC,OAAO,iBACvBP,OAAA,CAACH,GAAG;UAAAK,QAAA,gBACFF,OAAA;YAAAE,QAAA,EAAMK,OAAO,CAACC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eAC1BZ,OAAA;YAAAE,QAAA,EAAMK,OAAO,CAACM;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eAChCZ,OAAA,CAACc,IAAI;YAAAZ,QAAA,EAAEK,OAAO,CAACQ;UAAU;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACjCZ,OAAA;YAAAE,QAAA,EAAMK,OAAO,CAACS;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eAE5BZ,OAAA,CAACJ,IAAI;YAACS,SAAS,EAAC,eAAe;YAAAH,QAAA,eAC7BF,OAAA,CAACJ,IAAI,CAACqB,GAAG;cACPZ,SAAS,EAAC,eAAe;cACzBa,OAAO,EAAC,KAAK;cACbC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,GAAGf,OAAO,CAACgB,YAAa;cACzDC,GAAG,EAAEjB,OAAO,CAACC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACnB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACG;QAAA,GAbCL,OAAO,CAACkB,EAAE;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAerB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACc,EAAA,GA1BQzB,cAAc;AA4BvB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}