{"ast":null,"code":"var _jsxFileName = \"/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/Projects.js\",\n  _s = $RefreshSig$();\n// this is where json file data from porjects comes in. Reusable component// dont forget to import it\n// render six instances of projectgallery projects\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectGallery from \"./ProjectGallery\";\nimport \"../pages/Projects.css\";\nimport { useState } from \"react\";\n// import ProjectGallery from \"./ProjectGallery\";\n\n//I WILL CREATE AN ONCLICK EVENT WHICH PICKS UP THE RIGHT PROJECT BY USING CONDITIONAL RENDERING (ID I GUESS) AND CONNECTING IT TO APPROPRIATE SUBMIT BUTTON\n// FIND OUT HOW FETCH WORKS ? MAYBE TO USE IT..\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [selectedProject, setSelectedProject] = useState(null);\n  const projectClick = projectId => {\n    history.push(`/projectgallery/${projectId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projectsBody\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"whitesmoke\",\n          fontFamily: \"monserrat\"\n        },\n        children: [\"Just pick the project you would like to see\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        className: \"g-4\",\n        children: projectData.map(project => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              background: \"bisque\"\n            },\n            onClick: () => projectClick(project.id),\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: project.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"HN9pdtfYpwVsoSKTsDvm2nr85II=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Layout","projectData","Card","Col","Row","ProjectGallery","useState","jsxDEV","_jsxDEV","Projects","_s","selectedProject","setSelectedProject","projectClick","projectId","history","push","className","children","style","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","map","project","background","onClick","id","Body","Title","title","Text","description","_c","$RefreshReg$"],"sources":["/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/Projects.js"],"sourcesContent":["// this is where json file data from porjects comes in. Reusable component// dont forget to import it\n// render six instances of projectgallery projects\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectGallery from \"./ProjectGallery\";\nimport \"../pages/Projects.css\";\nimport { useState } from \"react\";\n// import ProjectGallery from \"./ProjectGallery\";\n\n//I WILL CREATE AN ONCLICK EVENT WHICH PICKS UP THE RIGHT PROJECT BY USING CONDITIONAL RENDERING (ID I GUESS) AND CONNECTING IT TO APPROPRIATE SUBMIT BUTTON\n// FIND OUT HOW FETCH WORKS ? MAYBE TO USE IT..\n\nfunction Projects() {\n  const [selectedProject, setSelectedProject] = useState(null);\n  const projectClick = (projectId) => {\n    history.push(`/projectgallery/${projectId}`);\n  };\n\n  return (\n    <div className=\"projectsBody\">\n      <Layout>\n        <h1 style={{ color: \"whitesmoke\", fontFamily: \"monserrat\" }}>\n          Just pick the project you would like to see{\" \"}\n        </h1>\n\n        <Row xs={1} md={2} className=\"g-4\">\n          {projectData.map((project) => (\n            <Col key={project.id}>\n              <Card\n                style={{ background: \"bisque\" }}\n                onClick={() => projectClick(project.id)}\n              >\n                <Card.Body>\n                  <Card.Title>{project.title}</Card.Title>\n                  <Card.Text>{project.description}</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Projects;\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,uBAAuB;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAMO,YAAY,GAAIC,SAAS,IAAK;IAClCC,OAAO,CAACC,IAAI,CAAE,mBAAkBF,SAAU,EAAC,CAAC;EAC9C,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BV,OAAA,CAACR,MAAM;MAAAkB,QAAA,gBACLV,OAAA;QAAIW,KAAK,EAAE;UAAEC,KAAK,EAAE,YAAY;UAAEC,UAAU,EAAE;QAAY,CAAE;QAAAH,QAAA,GAAC,6CAChB,EAAC,GAAG;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C,eAELjB,OAAA,CAACJ,GAAG;QAACsB,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACV,SAAS,EAAC,KAAK;QAAAC,QAAA,EAC/BjB,WAAW,CAAC2B,GAAG,CAAEC,OAAO,iBACvBrB,OAAA,CAACL,GAAG;UAAAe,QAAA,eACFV,OAAA,CAACN,IAAI;YACHiB,KAAK,EAAE;cAAEW,UAAU,EAAE;YAAS,CAAE;YAChCC,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACgB,OAAO,CAACG,EAAE,CAAE;YAAAd,QAAA,eAExCV,OAAA,CAACN,IAAI,CAAC+B,IAAI;cAAAf,QAAA,gBACRV,OAAA,CAACN,IAAI,CAACgC,KAAK;gBAAAhB,QAAA,EAAEW,OAAO,CAACM;cAAK;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAc,eACxCjB,OAAA,CAACN,IAAI,CAACkC,IAAI;gBAAAlB,QAAA,EAAEW,OAAO,CAACQ;cAAW;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAa;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAClC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACP,GATCI,OAAO,CAACG,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAWrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACf,EAAA,CA/BQD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}