{"ast":null,"code":"var _jsxFileName = \"/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/ProjectGallery.js\",\n  _s = $RefreshSig$();\n// Must be a reusable component that ingests JSON data as props and renders a single instance for each project\n//Must utilize Router props to properly render the right project based on user selection\n//Must render the following info:\n// Project title\n// Link to the deployed version\n// Link to the GitHub repository\n// GIF or screenshot of the deployed application\n// this is an actual card content\n// import React, { useState, useEffect } from \"react\";\n// import ContentCard from \"../components/ContentCard\";\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\n// import \"../pages/ProjectGallery.css\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n// i will create one instance of a card and populate it with appropriate content from my project JSON\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectGallery() {\n  _s();\n  const location = useLocation();\n  const prevProjectId = location.state.projectId;\n  console.log(\"this is fetched\", prevProjectId);\n  const selectedProject = projectData.filter(project => project.id === prevProjectId)[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        className: \"g-4\",\n        children: projectData.map(project => /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedProject.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedProject.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: selectedProject.projectUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: selectedProject.repoUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"projectsCards\",\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              className: \"projectsImgEl\",\n              variant: \"top\",\n              src: process.env.PUBLIC_URL + \"/\" + selectedProject.projectImage,\n              alt: selectedProject.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectGallery, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProjectGallery;\nexport default ProjectGallery;\nvar _c;\n$RefreshReg$(_c, \"ProjectGallery\");","map":{"version":3,"names":["Layout","projectData","Link","useLocation","Card","Col","Row","jsxDEV","_jsxDEV","ProjectGallery","_s","location","prevProjectId","state","projectId","console","log","selectedProject","filter","project","id","children","xs","md","className","map","title","fileName","_jsxFileName","lineNumber","columnNumber","description","projectUrl","repoUrl","Img","variant","src","process","env","PUBLIC_URL","projectImage","alt","_c","$RefreshReg$"],"sources":["/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/ProjectGallery.js"],"sourcesContent":["// Must be a reusable component that ingests JSON data as props and renders a single instance for each project\n//Must utilize Router props to properly render the right project based on user selection\n//Must render the following info:\n// Project title\n// Link to the deployed version\n// Link to the GitHub repository\n// GIF or screenshot of the deployed application\n// this is an actual card content\n// import React, { useState, useEffect } from \"react\";\n// import ContentCard from \"../components/ContentCard\";\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\n// import \"../pages/ProjectGallery.css\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n// i will create one instance of a card and populate it with appropriate content from my project JSON\nfunction ProjectGallery() {\n  const location = useLocation();\n  const prevProjectId = location.state.projectId;\n  console.log(\"this is fetched\", prevProjectId);\n\n  const selectedProject = projectData.filter(\n    (project) => project.id === prevProjectId\n  )[0];\n\n  return (\n    <div>\n      <Layout>\n        <Row xs={1} md={2} className=\"g-4\">\n          {projectData.map((project) => (\n            <Col key={project.id}>\n              <div>{selectedProject.title}</div>\n              <div>{selectedProject.description}</div>\n              <div>\n                <Link>{selectedProject.projectUrl}</Link>\n              </div>\n              <div>\n                <Link>{selectedProject.repoUrl}</Link>\n              </div>\n\n              <Card className=\"projectsCards\">\n                <Card.Img\n                  className=\"projectsImgEl\"\n                  variant=\"top\"\n                  src={\n                    process.env.PUBLIC_URL + \"/\" + selectedProject.projectImage\n                  }\n                  alt={selectedProject.title}\n                />\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Layout>\n    </div>\n  );\n}\n\nexport default ProjectGallery;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;;AAEA,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,aAAa,GAAGD,QAAQ,CAACE,KAAK,CAACC,SAAS;EAC9CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,aAAa,CAAC;EAE7C,MAAMK,eAAe,GAAGhB,WAAW,CAACiB,MAAM,CACvCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKR,aAAa,CAC1C,CAAC,CAAC,CAAC;EAEJ,oBACEJ,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACR,MAAM;MAAAqB,QAAA,eACLb,OAAA,CAACF,GAAG;QAACgB,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,SAAS,EAAC,KAAK;QAAAH,QAAA,EAC/BpB,WAAW,CAACwB,GAAG,CAAEN,OAAO,iBACvBX,OAAA,CAACH,GAAG;UAAAgB,QAAA,gBACFb,OAAA;YAAAa,QAAA,EAAMJ,eAAe,CAACS;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eAClCtB,OAAA;YAAAa,QAAA,EAAMJ,eAAe,CAACc;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eACxCtB,OAAA;YAAAa,QAAA,eACEb,OAAA,CAACN,IAAI;cAAAmB,QAAA,EAAEJ,eAAe,CAACe;YAAU;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAQ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrC,eACNtB,OAAA;YAAAa,QAAA,eACEb,OAAA,CAACN,IAAI;cAAAmB,QAAA,EAAEJ,eAAe,CAACgB;YAAO;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAQ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAClC,eAENtB,OAAA,CAACJ,IAAI;YAACoB,SAAS,EAAC,eAAe;YAAAH,QAAA,eAC7Bb,OAAA,CAACJ,IAAI,CAAC8B,GAAG;cACPV,SAAS,EAAC,eAAe;cACzBW,OAAO,EAAC,KAAK;cACbC,GAAG,EACDC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,GAAGtB,eAAe,CAACuB,YAChD;cACDC,GAAG,EAAExB,eAAe,CAACS;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAC3B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACG;QAAA,GAnBCX,OAAO,CAACC,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAqBrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACpB,EAAA,CAxCQD,cAAc;EAAA,QACJN,WAAW;AAAA;AAAAuC,EAAA,GADrBjC,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}