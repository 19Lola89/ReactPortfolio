{"ast":null,"code":"var _jsxFileName = \"/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/ProjectGallery.js\",\n  _s = $RefreshSig$();\n// this is an actual card content\n\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"../pages/ProjectGallery.css\";\n// i will create one instance of a card and populate it with appropriate content from my project JSON\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectGallery() {\n  _s();\n  const location = useLocation();\n  const prevProjectId = location.state.projectId;\n  // console.log(\"this is fetched\", prevProjectId);\n\n  const selectedProject = projectData.filter(project => project.id === prevProjectId)[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        className: \"g-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedProject.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedProject.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: selectedProject.projectUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: selectedProject.repoUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"projectsCards\",\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              className: \"projectsImgEl\",\n              variant: \"top\",\n              src: process.env.PUBLIC_URL + \"/\" + selectedProject.projectImage,\n              alt: selectedProject.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, selectedProject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectGallery, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProjectGallery;\nexport default ProjectGallery;\nvar _c;\n$RefreshReg$(_c, \"ProjectGallery\");","map":{"version":3,"names":["Layout","projectData","Link","useLocation","Card","Col","Row","jsxDEV","_jsxDEV","ProjectGallery","_s","location","prevProjectId","state","projectId","selectedProject","filter","project","id","children","xs","md","className","title","fileName","_jsxFileName","lineNumber","columnNumber","description","projectUrl","repoUrl","Img","variant","src","process","env","PUBLIC_URL","projectImage","alt","_c","$RefreshReg$"],"sources":["/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/ProjectGallery.js"],"sourcesContent":["// this is an actual card content\n\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"../pages/ProjectGallery.css\";\n// i will create one instance of a card and populate it with appropriate content from my project JSON\nfunction ProjectGallery() {\n  const location = useLocation();\n  const prevProjectId = location.state.projectId;\n  // console.log(\"this is fetched\", prevProjectId);\n\n  const selectedProject = projectData.filter(\n    (project) => project.id === prevProjectId\n  )[0];\n\n  return (\n    <div>\n      <Layout>\n        <Row xs={1} md={2} className=\"g-4\">\n          <Col key={selectedProject.id}>\n            <div>{selectedProject.title}</div>\n            <div>{selectedProject.description}</div>\n            <div>\n              <Link>{selectedProject.projectUrl}</Link>\n            </div>\n            <div>\n              <Link>{selectedProject.repoUrl}</Link>\n            </div>\n\n            <Card className=\"projectsCards\">\n              <Card.Img\n                className=\"projectsImgEl\"\n                variant=\"top\"\n                src={\n                  process.env.PUBLIC_URL + \"/\" + selectedProject.projectImage\n                }\n                alt={selectedProject.title}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </Layout>\n    </div>\n  );\n}\n\nexport default ProjectGallery;\n"],"mappings":";;AAAA;;AAEA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,6BAA6B;AACpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,aAAa,GAAGD,QAAQ,CAACE,KAAK,CAACC,SAAS;EAC9C;;EAEA,MAAMC,eAAe,GAAGd,WAAW,CAACe,MAAM,CACvCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKN,aAAa,CAC1C,CAAC,CAAC,CAAC;EAEJ,oBACEJ,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACR,MAAM;MAAAmB,QAAA,eACLX,OAAA,CAACF,GAAG;QAACc,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,SAAS,EAAC,KAAK;QAAAH,QAAA,eAChCX,OAAA,CAACH,GAAG;UAAAc,QAAA,gBACFX,OAAA;YAAAW,QAAA,EAAMJ,eAAe,CAACQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eAClCnB,OAAA;YAAAW,QAAA,EAAMJ,eAAe,CAACa;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eACxCnB,OAAA;YAAAW,QAAA,eACEX,OAAA,CAACN,IAAI;cAAAiB,QAAA,EAAEJ,eAAe,CAACc;YAAU;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAQ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrC,eACNnB,OAAA;YAAAW,QAAA,eACEX,OAAA,CAACN,IAAI;cAAAiB,QAAA,EAAEJ,eAAe,CAACe;YAAO;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAQ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAClC,eAENnB,OAAA,CAACJ,IAAI;YAACkB,SAAS,EAAC,eAAe;YAAAH,QAAA,eAC7BX,OAAA,CAACJ,IAAI,CAAC2B,GAAG;cACPT,SAAS,EAAC,eAAe;cACzBU,OAAO,EAAC,KAAK;cACbC,GAAG,EACDC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,GAAGrB,eAAe,CAACsB,YAChD;cACDC,GAAG,EAAEvB,eAAe,CAACQ;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAC3B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACG;QAAA,GAnBCZ,eAAe,CAACG,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAoBtB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACjB,EAAA,CAtCQD,cAAc;EAAA,QACJN,WAAW;AAAA;AAAAoC,EAAA,GADrB9B,cAAc;AAwCvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}