{"ast":null,"code":"var _jsxFileName = \"/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/Projects.js\",\n  _s = $RefreshSig$();\n// this is where json file data from porjects comes in. Reusable component// dont forget to import it\n// render six instances of projectgallery projects\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"../pages/Projects.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { Link } from \"react-router-dom\";\n\n//I WILL CREATE AN ONCLICK EVENT WHICH PICKS UP THE RIGHT PROJECT BY USING CONDITIONAL RENDERING (ID I GUESS) AND CONNECTING IT TO APPROPRIATE SUBMIT BUTTON\n// FIND OUT HOW FETCH WORKS ? MAYBE TO USE IT..\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects(props) {\n  _s();\n  const [selectProject, setSelectProject] = useState(null);\n  const navigate = useNavigate();\n  const moreDeets = projectId => {\n    setSelectProject(projectId);\n    console.log(\"Selected project ID:\", projectId);\n    // navigating to the next page with clicked projectId\n    navigate(\"/projectgallery\", {\n      state: {\n        projectId: projectId\n      }\n    });\n  };\n  useEffect(() => {\n    localStorage.setItem(\"selectedProject\", selectProject);\n  }, [selectProject]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectsBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: \"Sofia, sans-serif\"\n        },\n        children: [\"Just pick the project you would like to see\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        className: \"g-4\",\n        style: {\n          fontFamily: \"Sofia, sans-serif\"\n        },\n        children: projectData.map(project => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => moreDeets(project.id),\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: project.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"WiiyK/iR3wupFdRsZ/LcjtNnkdU=\", false, function () {\n  return [useNavigate];\n});\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Layout","projectData","Card","Col","Row","useNavigate","jsxDEV","_jsxDEV","Projects","props","_s","selectProject","setSelectProject","navigate","moreDeets","projectId","console","log","state","localStorage","setItem","children","className","style","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","map","project","onClick","id","Body","Title","title","Text","description","_c","$RefreshReg$"],"sources":["/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/Projects.js"],"sourcesContent":["// this is where json file data from porjects comes in. Reusable component// dont forget to import it\n// render six instances of projectgallery projects\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"../pages/Projects.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { Link } from \"react-router-dom\";\n\n//I WILL CREATE AN ONCLICK EVENT WHICH PICKS UP THE RIGHT PROJECT BY USING CONDITIONAL RENDERING (ID I GUESS) AND CONNECTING IT TO APPROPRIATE SUBMIT BUTTON\n// FIND OUT HOW FETCH WORKS ? MAYBE TO USE IT..\n\nfunction Projects(props) {\n  const [selectProject, setSelectProject] = useState(null);\n  const navigate = useNavigate();\n\n  const moreDeets = (projectId) => {\n    setSelectProject(projectId);\n    console.log(\"Selected project ID:\", projectId);\n    // navigating to the next page with clicked projectId\n    navigate(\"/projectgallery\", { state: { projectId: projectId } });\n  };\n  useEffect(() => {\n    localStorage.setItem(\"selectedProject\", selectProject);\n  }, [selectProject]);\n  return (\n    <Layout>\n      <div className=\"projectsBody\">\n        <h1 style={{ fontFamily: \"Sofia, sans-serif\" }}>\n          Just pick the project you would like to see{\" \"}\n        </h1>\n\n        <Row\n          xs={1}\n          md={2}\n          className=\"g-4\"\n          style={{ fontFamily: \"Sofia, sans-serif\" }}\n        >\n          {projectData.map((project) => (\n            <Col key={project.id}>\n              <Card onClick={() => moreDeets(project.id)}>\n                <Card.Body>\n                  <Card.Title>{project.title}</Card.Title>\n                  <Card.Text>{project.description}</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}