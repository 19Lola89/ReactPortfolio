{"ast":null,"code":"var _jsxFileName = \"/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/ProjectGallery.js\",\n  _s = $RefreshSig$();\n// this is an actual card content\n\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"../pages/ProjectGallery.css\";\nimport backgroundImage from \"../assets/pencil-2.png\";\n\n// i will create one instance of a card and populate it with appropriate content from my project JSON\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectGallery() {\n  _s();\n  const background = `url(${backgroundImage})`;\n  const location = useLocation();\n  const prevProjectId = location.state.projectId;\n  // console.log(\"this is fetched\", prevProjectId);\n\n  const selectedProject = projectData.filter(project => project.id === prevProjectId)[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        className: \"projectsCards\",\n        style: {\n          backgroundImage: background,\n          fontFamily: \"Sofia, sans-serif\",\n          color: \"white\",\n          fonSize: \"90px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedProject.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedProject.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: process.env.PUBLIC_URL + \"/\" + selectedProject.projectImage,\n              alt: selectedProject.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              children: selectedProject.projectUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: selectedProject.repoUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, selectedProject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectGallery, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProjectGallery;\nexport default ProjectGallery;\nvar _c;\n$RefreshReg$(_c, \"ProjectGallery\");","map":{"version":3,"names":["Layout","projectData","Link","useLocation","Card","Col","Row","backgroundImage","jsxDEV","_jsxDEV","ProjectGallery","_s","background","location","prevProjectId","state","projectId","selectedProject","filter","project","id","children","xs","md","className","style","fontFamily","color","fonSize","title","fileName","_jsxFileName","lineNumber","columnNumber","description","Img","variant","src","process","env","PUBLIC_URL","projectImage","alt","projectUrl","repoUrl","_c","$RefreshReg$"],"sources":["/Users/lolakasimova/bootcamp/reactPortfolio/ReactPortfolio/src/pages/ProjectGallery.js"],"sourcesContent":["// this is an actual card content\n\nimport Layout from \"../components/Layout\";\nimport projectData from \"../details.json\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"../pages/ProjectGallery.css\";\nimport backgroundImage from \"../assets/pencil-2.png\";\n\n// i will create one instance of a card and populate it with appropriate content from my project JSON\nfunction ProjectGallery() {\n  const background = `url(${backgroundImage})`;\n  const location = useLocation();\n  const prevProjectId = location.state.projectId;\n  // console.log(\"this is fetched\", prevProjectId);\n\n  const selectedProject = projectData.filter(\n    (project) => project.id === prevProjectId\n  )[0];\n\n  return (\n    <div>\n      <Layout>\n        <Row\n          xs={1}\n          md={2}\n          className=\"projectsCards\"\n          style={{\n            backgroundImage: background,\n            fontFamily: \"Sofia, sans-serif\",\n            color: \"white\",\n            fonSize: \"90px\",\n          }}\n        >\n          <Col key={selectedProject.id}>\n            <div>{selectedProject.title}</div>\n            <div>{selectedProject.description}</div>\n            <div>\n              <Card.Img\n                variant=\"top\"\n                src={\n                  process.env.PUBLIC_URL + \"/\" + selectedProject.projectImage\n                }\n                alt={selectedProject.title}\n              />\n              <Link>{selectedProject.projectUrl}</Link>\n            </div>\n            <div>\n              <Link>{selectedProject.repoUrl}</Link>\n            </div>\n\n            <Card></Card>\n          </Col>\n        </Row>\n      </Layout>\n    </div>\n  );\n}\n\nexport default ProjectGallery;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}